plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.11'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'it.springbatch'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
//            url "http://dev.radiuslab.co.kr:28081/repository/maven-snapshots/"
        url = project.version.endsWith('SNAPSHOT') ?
                "http://dev.radiuslab.co.kr:28081/repository/maven-snapshots/" :
                "http://dev.radiuslab.co.kr:28081/repository/maven-release/"
        allowInsecureProtocol true
        credentials {
            username "developer"
            password "qwer1234"
        }
    }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/snapshot" }
}

dependencies {
    implementation 'kr.freezz:common:0.0.1-SNAPSHOT'
    implementation 'kr.freezz:rental-common:0.0.1-SNAPSHOT'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'com.zaxxer:HikariCP'
    implementation 'com.h2database:h2'
    implementation 'mysql:mysql-connector-java:8.0.33'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"

}

tasks.named('test') {
    useJUnitPlatform()
}
